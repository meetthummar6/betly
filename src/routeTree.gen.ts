/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LayoutRouteImport } from './routes/_Layout/route'
import { Route as LayoutIndexImport } from './routes/_Layout/index'
import { Route as AuthLayoutSignupImport } from './routes/_authLayout/Signup'
import { Route as AuthLayoutLoginImport } from './routes/_authLayout/Login'

// Create/Update Routes

const LayoutRouteRoute = LayoutRouteImport.update({
  id: '/_Layout',
  getParentRoute: () => rootRoute,
} as any)

const LayoutIndexRoute = LayoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LayoutRouteRoute,
} as any)

const AuthLayoutSignupRoute = AuthLayoutSignupImport.update({
  id: '/_authLayout/Signup',
  path: '/Signup',
  getParentRoute: () => rootRoute,
} as any)

const AuthLayoutLoginRoute = AuthLayoutLoginImport.update({
  id: '/_authLayout/Login',
  path: '/Login',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_Layout': {
      id: '/_Layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutRouteImport
      parentRoute: typeof rootRoute
    }
    '/_authLayout/Login': {
      id: '/_authLayout/Login'
      path: '/Login'
      fullPath: '/Login'
      preLoaderRoute: typeof AuthLayoutLoginImport
      parentRoute: typeof rootRoute
    }
    '/_authLayout/Signup': {
      id: '/_authLayout/Signup'
      path: '/Signup'
      fullPath: '/Signup'
      preLoaderRoute: typeof AuthLayoutSignupImport
      parentRoute: typeof rootRoute
    }
    '/_Layout/': {
      id: '/_Layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LayoutIndexImport
      parentRoute: typeof LayoutRouteImport
    }
  }
}

// Create and export the route tree

interface LayoutRouteRouteChildren {
  LayoutIndexRoute: typeof LayoutIndexRoute
}

const LayoutRouteRouteChildren: LayoutRouteRouteChildren = {
  LayoutIndexRoute: LayoutIndexRoute,
}

const LayoutRouteRouteWithChildren = LayoutRouteRoute._addFileChildren(
  LayoutRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof LayoutRouteRouteWithChildren
  '/Login': typeof AuthLayoutLoginRoute
  '/Signup': typeof AuthLayoutSignupRoute
  '/': typeof LayoutIndexRoute
}

export interface FileRoutesByTo {
  '/Login': typeof AuthLayoutLoginRoute
  '/Signup': typeof AuthLayoutSignupRoute
  '/': typeof LayoutIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_Layout': typeof LayoutRouteRouteWithChildren
  '/_authLayout/Login': typeof AuthLayoutLoginRoute
  '/_authLayout/Signup': typeof AuthLayoutSignupRoute
  '/_Layout/': typeof LayoutIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '' | '/Login' | '/Signup' | '/'
  fileRoutesByTo: FileRoutesByTo
  to: '/Login' | '/Signup' | '/'
  id:
    | '__root__'
    | '/_Layout'
    | '/_authLayout/Login'
    | '/_authLayout/Signup'
    | '/_Layout/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  LayoutRouteRoute: typeof LayoutRouteRouteWithChildren
  AuthLayoutLoginRoute: typeof AuthLayoutLoginRoute
  AuthLayoutSignupRoute: typeof AuthLayoutSignupRoute
}

const rootRouteChildren: RootRouteChildren = {
  LayoutRouteRoute: LayoutRouteRouteWithChildren,
  AuthLayoutLoginRoute: AuthLayoutLoginRoute,
  AuthLayoutSignupRoute: AuthLayoutSignupRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_Layout",
        "/_authLayout/Login",
        "/_authLayout/Signup"
      ]
    },
    "/_Layout": {
      "filePath": "_Layout/route.tsx",
      "children": [
        "/_Layout/"
      ]
    },
    "/_authLayout/Login": {
      "filePath": "_authLayout/Login.tsx"
    },
    "/_authLayout/Signup": {
      "filePath": "_authLayout/Signup.tsx"
    },
    "/_Layout/": {
      "filePath": "_Layout/index.tsx",
      "parent": "/_Layout"
    }
  }
}
ROUTE_MANIFEST_END */
